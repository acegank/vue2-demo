<template>
    <section>
        <lt-header></lt-header>
        <div class="lt-main">
            用户名 密码 登录 Clicked: {{ $store.state }} times, count is {{ evenOrOdd }}. {{isLogin}}
            <div>
                <span @click="add">++++++++++++++++++</span>
                <span @click="decrement">----------------</span>
            </div>
            <div>
                <span @click="increment">++++++++++++++++++</span>
                <span @click="decrement">----------------</span>
            </div>
        </div>
        <lt-footer></lt-footer>
    </section>
</template>
<script>
    import { ltHeader, ltFooter } from '../components/'
    import { mapGetters, mapActions } from 'vuex'
    export default {
        data() {
            return {
                btn: false,
                form: {
                    id: '',
                    name: ''
                }
            }
        },
        components: {
            ltHeader,
            ltFooter
        },
        computed: mapGetters([
            'evenOrOdd',
            'isLogin'
        ]),
        mounted() {
            this.$nextTick(() => {
                // console.log(1)
                this.getBaseInfo({
                    params: {
                        'xxx': 111
                    },
                    error() {
                        console.log(12)
                    }
                })
            })
        },
        methods: {
            ...mapActions([
                'increment',
                'decrement',
                'incrementIfOdd',
                'incrementAsync',
                'getBaseInfo'
            ]),
            add() {
                // this.incrementIfOdd()
                this.incrementAsync({ 'xx': 1 })
            }
        }
    }
</script>

















import api from '../api'
import { BASEINFO, INCREMENT, DECREMENT } from './types'

export default {
    // getData({ commit, state }) {
    //     cityGuess().then(res => {
    //         commit(GET_DATA, { data: res })
    //     })
    // }
    postLogin({ commit, state }, {params, success, error}) {
        api
            .login(params)
            .then(res => {
                commit(BASEINFO, { data: res })
                success && success(res)
            })
            .catch(res => {
                error && error(res)
            })
    },
    increment: ({ commit }) => commit(INCREMENT),
    decrement: ({ commit }) => commit(DECREMENT),
    incrementIfOdd({ commit, state }) {
        if ((state.count + 1) % 2 === 0) {
            commit(INCREMENT)
        }
    },
    incrementAsync({ commit, state }, a) {
        console.log(state.count)
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                commit(INCREMENT)
                resolve()
            }, 1000)
        })
    }
}
